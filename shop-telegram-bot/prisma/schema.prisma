// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  telegramId String     @unique
  city       String
  address    String
  zipCode    String
  country    String
  name       String
  cartItems  CartItem[]
  orders     Order[]
  createdAt  DateTime   @default(now())
}

model Product {
  id          Int              @id @default(autoincrement())
  name        String
  description String
  imageUrl    String
  variants    ProductVariant[]
  createdAt   DateTime         @default(now())
}

model ProductVariant {
  id         Int         @id @default(autoincrement())
  productId  Int
  product    Product     @relation(fields: [productId], references: [id])
  size       String
  color      String
  price      Float
  currency   String      @default("USD")
  imageUrl   String
  stock      Int         @default(1)
  cartItems  CartItem[]
  orderItems OrderItem[]
}

model CartItem {
  id        Int            @id @default(autoincrement())
  userId    Int
  user      User           @relation(fields: [userId], references: [id])
  variantId Int
  variant   ProductVariant @relation(fields: [variantId], references: [id])
  quantity  Int
}

model Order {
  id          Int         @id @default(autoincrement())
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  totalPrice  Float
  currency    String      @default("USD")
  status      String      @default("pending")
  paymentType String
  paymentRef  String
  createdAt   DateTime    @default(now())
  items       OrderItem[]
}

model OrderItem {
  id        Int            @id @default(autoincrement())
  orderId   Int
  order     Order          @relation(fields: [orderId], references: [id])
  variantId Int
  variant   ProductVariant @relation(fields: [variantId], references: [id])
  quantity  Int
}
