import { InlineMenu } from '../menus/inlineMenu.service';
import { Telegraf } from 'telegraf';
import { MyContext } from '../types/my-context';
import { EditCartMenuService } from './edit-cart-menu.service';
import { UserService } from './user.service';

export class CartMenuService {
	constructor(
		private readonly bot: Telegraf<MyContext>,
		private readonly editCartMenuService: EditCartMenuService,
		private readonly userService: UserService,
	) {}

	public async build(): Promise<InlineMenu<MyContext>> {
		const itemsCartMenu = [
			{
				label: '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
				callback: 'editCart',
				handler: async (ctx: MyContext): Promise<void> => {
					const telegramId = ctx.from?.id;
					if (!telegramId) return;

					const userId = await this.userService.getUserIdByTelegramId(String(telegramId));
					if (!userId) return;
					await ctx.answerCbQuery();
					await ctx.reply('–ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
					const editCartMenu = await this.editCartMenuService.build(userId);
					await ctx.reply(
						`üîç  –º–æ–∂–µ—Ç–µ –≤–Ω–µ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≤–∞—à –∑–∞–∫–∞–∑:
						–µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ —Ç–æ–≤–∞—Ä, —Ç–æ –æ–Ω –¥–æ–±–∞–≤–∏—Ç—Å—è –≤ –∫–æ—Ä–∑–∏–Ω—É
						–µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ üóëÔ∏è —Ç–æ —Ç–æ–≤–∞—Ä –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã`,
						editCartMenu.getKeyboard(2),
					);
				},
			},
			{
				label: '‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å',
				callback: 'confirmOrder',
				handler: async (ctx: MyContext): Promise<void> => {
					await ctx.answerCbQuery();
					await ctx.reply('–ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è');
					await ctx.scene.enter('checkout-wizard');
				},
			},
		];

		const menu = new InlineMenu('cartMenu', itemsCartMenu);
		menu.register(this.bot);
		return menu;
	}
}
